{"ast":null,"code":"var _jsxFileName = \"/Users/yuanfeng/Desktop/project/src/components/SortButtons.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function SortButtons(props) {\n  const {\n    movie,\n    setMovie,\n    sortlist,\n    setSortlist\n  } = props; // const [sortlist, setSortlist] = useState([\"\", \"\", \"\", \"\"]);\n  // Reset the other buttons active status if another one is pressed\n  // First time press does not change ↓ arrow direction\n  // Sort function is done for each single page\n\n  const sortBtnTitle = () => {\n    if (sortlist[0] === false) {\n      setSortlist([true, \"\", \"\", \"\"]);\n      setMovie(movie.sort((a, b) => {\n        if (a.title > b.title) return -1;\n      }));\n    } else {\n      // first time & true\n      setSortlist([false, \"\", \"\", \"\"]);\n      setMovie(movie.sort((a, b) => {\n        if (a.title < b.title) return -1;\n      }));\n    }\n  };\n\n  const sortBtnVote = () => {\n    if (sortlist[1] === false) {\n      setSortlist([\"\", true, \"\", \"\"]);\n      setMovie(movie.sort((a, b) => {\n        if (a.vote_count < b.vote_count) return -1;\n      }));\n    } else {\n      setSortlist([\"\", false, \"\", \"\"]);\n      setMovie(movie.sort((a, b) => {\n        if (a.vote_count > b.vote_count) return -1;\n      }));\n    }\n  };\n\n  const sortBtnScore = () => {\n    if (sortlist[2] === false) {\n      setSortlist([\"\", \"\", true, \"\"]);\n      setMovie(movie.sort((a, b) => {\n        if (a.vote_average < b.vote_average) return -1;\n      }));\n    } else {\n      setSortlist([\"\", \"\", false, \"\"]);\n      setMovie(movie.sort((a, b) => {\n        if (a.vote_average > b.vote_average) return -1;\n      }));\n    }\n  };\n\n  const sortBtnDate = () => {\n    if (sortlist[3] === false) {\n      setSortlist([\"\", \"\", \"\", true]);\n      setMovie(movie.sort((a, b) => {\n        if (a.release_date < b.release_date) return -1;\n      }));\n    } else {\n      setSortlist([\"\", \"\", \"\", false]);\n      setMovie(movie.sort((a, b) => {\n        if (a.release_date > b.release_date) return -1;\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sortBtnContainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sortBtn\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"sortBtnTitle\",\n          onClick: sortBtnTitle,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Title \", sortlist[0] ? \"↑\" : \"↓\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"sortBtnVote\",\n          onClick: sortBtnVote,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Vote Count \", sortlist[1] ? \"↑\" : \"↓\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"sortBtnScore\",\n          onClick: sortBtnScore,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Average Score \", sortlist[2] ? \"↑\" : \"↓\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"sortBtnDate\",\n          onClick: sortBtnDate,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Release Date \", sortlist[3] ? \"↑\" : \"↓\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = SortButtons;\n\nvar _c;\n\n$RefreshReg$(_c, \"SortButtons\");","map":{"version":3,"sources":["/Users/yuanfeng/Desktop/project/src/components/SortButtons.js"],"names":["React","SortButtons","props","movie","setMovie","sortlist","setSortlist","sortBtnTitle","sort","a","b","title","sortBtnVote","vote_count","sortBtnScore","vote_average","sortBtnDate","release_date"],"mappings":"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","sourcesContent":["import React from \"react\";\n\nexport default function SortButtons(props) {\n  const { movie, setMovie, sortlist, setSortlist } = props;\n  // const [sortlist, setSortlist] = useState([\"\", \"\", \"\", \"\"]);\n\n  // Reset the other buttons active status if another one is pressed\n  // First time press does not change ↓ arrow direction\n  // Sort function is done for each single page\n  const sortBtnTitle = () => {\n    if (sortlist[0] === false) {\n      setSortlist([true, \"\", \"\", \"\"]);\n      setMovie(\n        movie.sort((a, b) => {\n          if (a.title > b.title) return -1;\n        })\n      );\n    } else {\n      // first time & true\n      setSortlist([false, \"\", \"\", \"\"]);\n      setMovie(\n        movie.sort((a, b) => {\n          if (a.title < b.title) return -1;\n        })\n      );\n    }\n  };\n  const sortBtnVote = () => {\n    if (sortlist[1] === false) {\n      setSortlist([\"\", true, \"\", \"\"]);\n      setMovie(\n        movie.sort((a, b) => {\n          if (a.vote_count < b.vote_count) return -1;\n        })\n      );\n    } else {\n      setSortlist([\"\", false, \"\", \"\"]);\n      setMovie(\n        movie.sort((a, b) => {\n          if (a.vote_count > b.vote_count) return -1;\n        })\n      );\n    }\n  };\n  const sortBtnScore = () => {\n    if (sortlist[2] === false) {\n      setSortlist([\"\", \"\", true, \"\"]);\n      setMovie(\n        movie.sort((a, b) => {\n          if (a.vote_average < b.vote_average) return -1;\n        })\n      );\n    } else {\n      setSortlist([\"\", \"\", false, \"\"]);\n      setMovie(\n        movie.sort((a, b) => {\n          if (a.vote_average > b.vote_average) return -1;\n        })\n      );\n    }\n  };\n  const sortBtnDate = () => {\n    if (sortlist[3] === false) {\n      setSortlist([\"\", \"\", \"\", true]);\n      setMovie(\n        movie.sort((a, b) => {\n          if (a.release_date < b.release_date) return -1;\n        })\n      );\n    } else {\n      setSortlist([\"\", \"\", \"\", false]);\n      setMovie(\n        movie.sort((a, b) => {\n          if (a.release_date > b.release_date) return -1;\n        })\n      );\n    }\n  };\n  return (\n    <>\n      <div className=\"sortBtnContainer\">\n        <div className=\"sortBtn\">\n          <button id=\"sortBtnTitle\" onClick={sortBtnTitle}>\n            <p>Title {sortlist[0] ? \"↑\" : \"↓\"}</p>\n          </button>\n          <button id=\"sortBtnVote\" onClick={sortBtnVote}>\n            <p>Vote Count {sortlist[1] ? \"↑\" : \"↓\"}</p>\n          </button>\n          <button id=\"sortBtnScore\" onClick={sortBtnScore}>\n            <p>Average Score {sortlist[2] ? \"↑\" : \"↓\"}</p>\n          </button>\n          <button id=\"sortBtnDate\" onClick={sortBtnDate}>\n            <p>Release Date {sortlist[3] ? \"↑\" : \"↓\"}</p>\n          </button>\n        </div>\n      </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}