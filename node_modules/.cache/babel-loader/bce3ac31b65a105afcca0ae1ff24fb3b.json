{"ast":null,"code":"var _jsxFileName = \"/Users/yuanfeng/Desktop/projectfinal/src/pages/MoviesList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport * as CgIcons from \"react-icons/cg\";\nimport * as faIcons from \"react-icons/fa\";\nimport { IconContext } from \"react-icons\";\nimport \"./MoviesList.css\";\nimport { BASE_URL, MOVIE_TYPE, API_KEY, REST, IMG_URL } from \"../components/Config\"; // import { GlobalContext, GlobalProvider } from \"../context/GlobalState\";\n\nimport RenderEachMovie from \"../components/RenderEachMovie\";\nimport SortButtons from \"../components/SortButtons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MoviesList() {\n  _s();\n\n  const [movie, setMovie] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalpage, setTotalpage] = useState([]);\n  const [sortlist, setSortlist] = useState([\"\", \"\", \"\", \"\"]);\n  /*  const { addMovieToLikedList, likedList } = useContext(GlobalContext);\n     const likedListDisabled = (id) => {\n    // console.log(likedList);\n    likedList.find((likedListItem) => {\n      // console.log(\"likedListItem id:\", likedListItem.id);\n      // console.log(\"prop id:\", id);\n      // console.log(likedListItem.id === id ? true : false);\n      return likedListItem.id === id ? true : false;\n    });\n  }; */\n\n  useEffect(() => {\n    setSortlist([\"\", \"\", \"\", \"\"]); // Reset sort btn if change page\n\n    const url = `${BASE_URL}${MOVIE_TYPE}${API_KEY}${REST}` + page;\n    fetch(url).then(res => res.json()).then(data => {\n      // console.log(data);\n      setMovie(data.results);\n      setTotalpage(data.total_pages);\n    });\n  }, [page]);\n\n  const handlePrev = () => {\n    setPage(page - 1);\n  };\n\n  const handleNext = () => {\n    setPage(page + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"moviesList\",\n    children: [/*#__PURE__*/_jsxDEV(SortButtons, {\n      movie: movie,\n      setMovie: setMovie,\n      sortlist: sortlist,\n      setSortlist: setSortlist\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BordorLine, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageBtn\",\n      children: /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n        value: {\n          color: \"black\",\n          size: \"1.75rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handlePrev,\n          disabled: page === 1 ? true : false,\n          children: /*#__PURE__*/_jsxDEV(CgIcons.CgArrowLeftR, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [page, \" / \", totalpage]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleNext,\n          disabled: page === totalpage ? true : false,\n          children: /*#__PURE__*/_jsxDEV(CgIcons.CgArrowRightR, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BordorLine, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), movie.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(RenderEachMovie, {\n        item: item\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MoviesList, \"1eb6dY8Uspo1OXFLkOHRm2DwFDI=\");\n\n_c = MoviesList;\n\nconst BordorLine = () => /*#__PURE__*/_jsxDEV(\"hr\", {\n  style: {\n    margin: \"10px 5% 10px 5%\",\n    width: \"90%\",\n    border: \"1px solid black\"\n  }\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 90,\n  columnNumber: 3\n}, this);\n/* Day2 - Yuanfeng\nclass MoviesList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      movie: [],\n      page: 1,\n    };\n  }\n  async componentDidMount() {\n    const url = `${BASE_URL}${MOVIE_TYPE}${API_KEY}${REST}` + this.state.page;\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({ movie: data.results, loading: false });\n  }\n  async componentDidUpdate() {\n    const url = `${BASE_URL}${MOVIE_TYPE}${API_KEY}${REST}` + this.state.page;\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({ movie: data.results, loading: false });\n  }\n\n  pre = () => {\n    if (this.state.page > 1) {\n      this.setState({ page: this.state.page - 1 });\n    }\n  };\n  nex = () => {\n    if (this.state.page < 500) {\n      this.setState({ page: this.state.page + 1 });\n    }\n  };\n  render() {\n    if (this.state.loading) {\n      return <div>loading...</div>;\n    }\n    if (!this.state.movie.length) {\n      return <div>Didn't get a movie</div>;\n    }\n    const { page, movie } = this.state;\n    return (\n      <div className=\"moviesList\">\n        <div className=\"sortBtn\">\n          <button></button>\n          <button></button>\n          <button></button>\n          <button></button>\n        </div>\n        <div className=\"pageBtn\">\n          <hr />\n          <button onClick={this.pre} disabled={page === 1 ? true : false}>\n            Pre\n          </button>\n          <button onClick={this.nex} disabled={page === 500 ? true : false}>\n            Nex\n          </button>\n          <hr />\n        </div>\n        {movie.map((movielist) => (\n          <div id=\"Word\">\n            <img\n              src={\"https://image.tmdb.org/t/p/w500\" + movielist.poster_path}\n            />\n            <br />\n            <button>Liked</button>\n            <button>Blocked</button>\n            <div>{movielist.title}</div>\n            <div>Release Date: {movielist.release_date}</div>\n            <div>\n              Vote Count: {movielist.vote_count}| Average Score:{\" \"}\n              {movielist.vote_average}/10\n            </div>\n            <div>{movielist.overview}</div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default MoviesList; */\n\n\n_c2 = BordorLine;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MoviesList\");\n$RefreshReg$(_c2, \"BordorLine\");","map":{"version":3,"sources":["/Users/yuanfeng/Desktop/projectfinal/src/pages/MoviesList.js"],"names":["React","useState","useEffect","useContext","CgIcons","faIcons","IconContext","BASE_URL","MOVIE_TYPE","API_KEY","REST","IMG_URL","RenderEachMovie","SortButtons","MoviesList","movie","setMovie","page","setPage","totalpage","setTotalpage","sortlist","setSortlist","url","fetch","then","res","json","data","results","total_pages","handlePrev","handleNext","color","size","map","item","id","BordorLine","margin","width","border"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAO,KAAKC,OAAZ,MAAyB,gBAAzB;AACA,OAAO,KAAKC,OAAZ,MAAyB,gBAAzB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,kBAAP;AACA,SACEC,QADF,EAEEC,UAFF,EAGEC,OAHF,EAIEC,IAJF,EAKEC,OALF,QAMO,sBANP,C,CAOA;;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;AAEA,eAAe,SAASC,UAAT,GAAsB;AAAA;;AACnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBf,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACkB,SAAD,EAAYC,YAAZ,IAA4BnB,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACoB,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAC,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAAD,CAAxC;AAEA;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGEC,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,WAAW,CAAC,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,CAAD,CAAX,CADc,CACiB;;AAC/B,UAAMC,GAAG,GAAI,GAAEhB,QAAS,GAAEC,UAAW,GAAEC,OAAQ,GAAEC,IAAK,EAA1C,GAA8CO,IAA1D;AACAO,IAAAA,KAAK,CAACD,GAAD,CAAL,CACGE,IADH,CACSC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADjB,EAEGF,IAFH,CAESG,IAAD,IAAU;AACd;AACAZ,MAAAA,QAAQ,CAACY,IAAI,CAACC,OAAN,CAAR;AACAT,MAAAA,YAAY,CAACQ,IAAI,CAACE,WAAN,CAAZ;AACD,KANH;AAOD,GAVQ,EAUN,CAACb,IAAD,CAVM,CAAT;;AAYA,QAAMc,UAAU,GAAG,MAAM;AACvBb,IAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACD,GAFD;;AAGA,QAAMe,UAAU,GAAG,MAAM;AACvBd,IAAAA,OAAO,CAACD,IAAI,GAAG,CAAR,CAAP;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA,4BACE,QAAC,WAAD;AACE,MAAA,KAAK,EAAEF,KADT;AAEE,MAAA,QAAQ,EAAEC,QAFZ;AAGE,MAAA,QAAQ,EAAEK,QAHZ;AAIE,MAAA,WAAW,EAAEC;AAJf;AAAA;AAAA;AAAA;AAAA,YADF,eAOE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAPF,eAQE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACE,QAAC,WAAD,CAAa,QAAb;AAAsB,QAAA,KAAK,EAAE;AAAEW,UAAAA,KAAK,EAAE,OAAT;AAAkBC,UAAAA,IAAI,EAAE;AAAxB,SAA7B;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAEH,UAAjB;AAA6B,UAAA,QAAQ,EAAEd,IAAI,KAAK,CAAT,GAAa,IAAb,GAAoB,KAA3D;AAAA,iCACE,QAAC,OAAD,CAAS,YAAT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAA,qBACGA,IADH,SACYE,SADZ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAOE;AACE,UAAA,OAAO,EAAEa,UADX;AAEE,UAAA,QAAQ,EAAEf,IAAI,KAAKE,SAAT,GAAqB,IAArB,GAA4B,KAFxC;AAAA,iCAIE,QAAC,OAAD,CAAS,aAAT;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,gBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARF,eAwBE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YAxBF,EAyBGJ,KAAK,CAACoB,GAAN,CAAWC,IAAD,iBACT;AAAA,6BACE,QAAC,eAAD;AAAiB,QAAA,IAAI,EAAEA;AAAvB;AAAA;AAAA;AAAA;AAAA;AADF,OAAUA,IAAI,CAACC,EAAf;AAAA;AAAA;AAAA;AAAA,YADD,CAzBH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiCD;;GAtEuBvB,U;;KAAAA,U;;AAwExB,MAAMwB,UAAU,GAAG,mBACjB;AACE,EAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE,isourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport * as CgIcons from \"react-icons/cg\";\nimport * as faIcons from \"react-icons/fa\";\nimport { IconContext } from \"react-icons\";\nimport \"./MoviesList.css\";\nimport {\n  BASE_URL,\n  MOVIE_TYPE,\n  API_KEY,\n  REST,\n  IMG_URL,\n} from \"../components/Config\";\n// import { GlobalContext, GlobalProvider } from \"../context/GlobalState\";\nimport RenderEachMovie from \"../components/RenderEachMovie\";\nimport SortButtons from \"../components/SortButtons\";\n\nexport default function MoviesList() {\n  const [movie, setMovie] = useState([]);\n  const [page, setPage] = useState(1);\n  const [totalpage, setTotalpage] = useState([]);\n  const [sortlist, setSortlist] = useState([\"\", \"\", \"\", \"\"]);\n\n  /*  const { addMovieToLikedList, likedList } = useContext(GlobalContext);\n\n    const likedListDisabled = (id) => {\n    // console.log(likedList);\n    likedList.find((likedListItem) => {\n      // console.log(\"likedListItem id:\", likedListItem.id);\n      // console.log(\"prop id:\", id);\n      // console.log(likedListItem.id === id ? true : false);\n      return likedListItem.id === id ? true : false;\n    });\n  }; */\n\n  useEffect(() => {\n    setSortlist([\"\", \"\", \"\", \"\"]); // Reset sort btn if change page\n    const url = `${BASE_URL}${MOVIE_TYPE}${API_KEY}${REST}` + page;\n    fetch(url)\n      .then((res) => res.json())\n      .then((data) => {\n        // console.log(data);\n        setMovie(data.results);\n        setTotalpage(data.total_pages);\n      });\n  }, [page]);\n\n  const handlePrev = () => {\n    setPage(page - 1);\n  };\n  const handleNext = () => {\n    setPage(page + 1);\n  };\n\n  return (\n    <div className=\"moviesList\">\n      <SortButtons\n        movie={movie}\n        setMovie={setMovie}\n        sortlist={sortlist}\n        setSortlist={setSortlist}\n      />\n      <BordorLine />\n      <div className=\"pageBtn\">\n        <IconContext.Provider value={{ color: \"black\", size: \"1.75rem\" }}>\n          <button onClick={handlePrev} disabled={page === 1 ? true : false}>\n            <CgIcons.CgArrowLeftR />\n          </button>\n          <p>\n            {page} / {totalpage}\n          </p>\n          <button\n            onClick={handleNext}\n            disabled={page === totalpage ? true : false}\n          >\n            <CgIcons.CgArrowRightR />\n          </button>\n        </IconContext.Provider>\n      </div>\n      <BordorLine />\n      {movie.map((item) => (\n        <div key={item.id}>\n          <RenderEachMovie item={item} />\n        </div>\n      ))}\n    </div>\n  );\n}\n\nconst BordorLine = () => (\n  <hr\n    style={{\n      margin: \"10px 5% 10px 5%\",\n      width: \"90%\",\n      border: \"1px solid black\",\n    }}\n  />\n);\n\n/* Day2 - Yuanfeng\nclass MoviesList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      movie: [],\n      page: 1,\n    };\n  }\n  async componentDidMount() {\n    const url = `${BASE_URL}${MOVIE_TYPE}${API_KEY}${REST}` + this.state.page;\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({ movie: data.results, loading: false });\n  }\n  async componentDidUpdate() {\n    const url = `${BASE_URL}${MOVIE_TYPE}${API_KEY}${REST}` + this.state.page;\n    const response = await fetch(url);\n    const data = await response.json();\n    this.setState({ movie: data.results, loading: false });\n  }\n\n  pre = () => {\n    if (this.state.page > 1) {\n      this.setState({ page: this.state.page - 1 });\n    }\n  };\n  nex = () => {\n    if (this.state.page < 500) {\n      this.setState({ page: this.state.page + 1 });\n    }\n  };\n  render() {\n    if (this.state.loading) {\n      return <div>loading...</div>;\n    }\n    if (!this.state.movie.length) {\n      return <div>Didn't get a movie</div>;\n    }\n    const { page, movie } = this.state;\n    return (\n      <div className=\"moviesList\">\n        <div className=\"sortBtn\">\n          <button></button>\n          <button></button>\n          <button></button>\n          <button></button>\n        </div>\n        <div className=\"pageBtn\">\n          <hr />\n          <button onClick={this.pre} disabled={page === 1 ? true : false}>\n            Pre\n          </button>\n          <button onClick={this.nex} disabled={page === 500 ? true : false}>\n            Nex\n          </button>\n          <hr />\n        </div>\n        {movie.map((movielist) => (\n          <div id=\"Word\">\n            <img\n              src={\"https://image.tmdb.org/t/p/w500\" + movielist.poster_path}\n            />\n            <br />\n            <button>Liked</button>\n            <button>Blocked</button>\n            <div>{movielist.title}</div>\n            <div>Release Date: {movielist.release_date}</div>\n            <div>\n              Vote Count: {movielist.vote_count}| Average Score:{\" \"}\n              {movielist.vote_average}/10\n            </div>\n            <div>{movielist.overview}</div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n\nexport default MoviesList; */\n"]},"metadata":{},"sourceType":"module"}