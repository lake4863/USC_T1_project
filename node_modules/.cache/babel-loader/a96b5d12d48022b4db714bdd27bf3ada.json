{"ast":null,"code":"var _jsxFileName = \"/Users/yuanfeng/Desktop/project/src/components/RenderEachMovie.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport * as CgIcons from \"react-icons/cg\";\nimport * as faIcons from \"react-icons/fa\";\nimport { IconContext } from \"react-icons\";\nimport \"../pages/MoviesList.css\";\nimport { BASE_URL, MOVIE_TYPE, API_KEY, REST, IMG_URL } from \"./Config\";\nimport { GlobalContext, GlobalProvider } from \"../context/GlobalState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RenderEachMovie(props) {\n  _s();\n\n  const {\n    item\n  } = props;\n  const {\n    addMovieToLikedList,\n    addMovieToBlockedList,\n    likedList,\n    blockedList\n  } = useContext(GlobalContext); // const [pressLike, setPressLike] = useState(false);\n  // const [likeBtnHTML, setlikeBtnHTML] = useState(\"Like\");\n\n  let likedListDisabled = likedList.find(likedListItem => likedListItem.id === item.id ? true : false);\n  let blockedListDisabled = blockedList.find(BlockedListItem => BlockedListItem.id === item.id ? true : false);\n\n  const handleLikeClick = item => {\n    addMovieToLikedList(item); // console.log(\"let's see if I can get this value here\", likedListDisabled)\n    // setPressLike(true);\n    // setlikeBtnHTML(\"Already Liked\");\n  };\n\n  const handleBlockClick = item => {\n    addMovieToBlockedList(item);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movieContent\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: IMG_URL + item.poster_path,\n        width: \"60%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movieBtn\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          // id={pressLike ? \"likedBtn\" : \"likeBtn\"}\n          id: likedListDisabled ? \"likedBtn\" : \"likeBtn\",\n          disabled: likedListDisabled // onClick={() => addMovieToLikedList(item)}\n          ,\n          onClick: () => handleLikeClick(item),\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: likedListDisabled ? \"Liked\" : \"Like\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: blockedListDisabled ? \"blockedBtn\" : \"blockBtn\",\n          disabled: blockedListDisabled,\n          onClick: () => handleBlockClick(item),\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: blockedListDisabled ? \"Blocked\" : \"Block\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movieTitle\",\n        children: [/*#__PURE__*/_jsxDEV(IconContext.Provider, {\n          value: {\n            color: \"red\",\n            size: \"2rem\"\n          },\n          children: /*#__PURE__*/_jsxDEV(faIcons.FaHeart, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), item.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Release Date: \", item.release_date]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Vote Count: \", item.vote_count, \"| Average Score: \", item.vote_average, \"/10\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movieOverview\",\n        children: item.overview\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, item.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(RenderEachMovie, \"RrDxcXa/N3t1Y32u3QwlPAklcYQ=\");\n\n_c = RenderEachMovie;\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderEachMovie\");","map":{"version":3,"sources":["/Users/yuanfeng/Desktop/project/src/components/RenderEachMovie.js"],"names":["React","useState","useEffect","useContext","CgIcons","faIcons","IconContext","BASE_URL","MOVIE_TYPE","API_KEY","REST","IMG_URL","GlobalContext","GlobalProvider","RenderEachMovie","props","item","addMovieToLikedList","addMovieToBlockedList","likedList","blockedList","likedListDisabled","find","likedListItem","id","blockedListDisabled","BlockedListItem","handleLikeClick","handleBlockClick","poster_path","color","size","title","release_date","vote_count","vote_average","overview"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport * as CgIcons from \"react-icons/cg\";\nimport * as faIcons from \"react-icons/fa\";\nimport { IconContext } from \"react-icons\";\nimport \"../pages/MoviesList.css\";\nimport { BASE_URL, MOVIE_TYPE, API_KEY, REST, IMG_URL } from \"./Config\";\nimport { GlobalContext, GlobalProvider } from \"../context/GlobalState\";\n\nexport default function RenderEachMovie(props) {\n  const { item } = props;\n  const { addMovieToLikedList, addMovieToBlockedList, likedList, blockedList } =\n    useContext(GlobalContext);\n  // const [pressLike, setPressLike] = useState(false);\n  // const [likeBtnHTML, setlikeBtnHTML] = useState(\"Like\");\n\n  let likedListDisabled = likedList.find((likedListItem) =>\n    likedListItem.id === item.id ? true : false\n  );\n  let blockedListDisabled = blockedList.find((BlockedListItem) =>\n    BlockedListItem.id === item.id ? true : false\n  );\n\n  const handleLikeClick = (item) => {\n    addMovieToLikedList(item);\n    // console.log(\"let's see if I can get this value here\", likedListDisabled)\n    // setPressLike(true);\n    // setlikeBtnHTML(\"Already Liked\");\n  };\n  const handleBlockClick = (item) => {\n    addMovieToBlockedList(item);\n  };\n\n  return (\n    <>\n        <div key={item.id} className=\"movieContent\">\n          <img src={IMG_URL + item.poster_path} width=\"60%\" />\n          <br />\n          <div className=\"movieBtn\">\n            <button\n              // id={pressLike ? \"likedBtn\" : \"likeBtn\"}\n              id={likedListDisabled ? \"likedBtn\" : \"likeBtn\"}\n              disabled={likedListDisabled}\n              // onClick={() => addMovieToLikedList(item)}\n              onClick={() => handleLikeClick(item)}\n            >\n              {/* <p>{likeBtnHTML}</p> */}\n              <p>{likedListDisabled ? \"Liked\" : \"Like\"}</p>\n            </button>\n            <button\n                id={blockedListDisabled ? \"blockedBtn\" : \"blockBtn\"}\n                disabled = { blockedListDisabled }\n                onClick={() => handleBlockClick(item)}\n            >\n              <p>{blockedListDisabled ? \"Blocked\" : \"Block\"}</p>\n            </button>\n          </div>\n          <div className=\"movieTitle\">\n            <IconContext.Provider value={{ color: \"red\", size: \"2rem\" }}>\n              <faIcons.FaHeart />\n            </IconContext.Provider>\n            {item.title}\n          </div>\n          <div>Release Date: {item.release_date}</div>\n          <div>\n            Vote Count: {item.vote_count}| Average Score: {item.vote_average}/10\n          </div>\n          <div className=\"movieOverview\">{item.overview}</div>\n        </div>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}